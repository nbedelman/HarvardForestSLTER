annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
graph1=ggplot() +
stat_smooth(data=allLines, aes(x=julDate, y=values, color=measure, fill=measure), size=2) +
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, alpha=type), size=3) +
scale_color_manual(values=c("orange", "deeppink", "skyblue","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
scale_alpha_manual(values=c(.4,.6))+
scale_fill_manual(values=c("orange","deeppink", "skyblue","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
graph1=ggplot() +
stat_smooth(data=allLines, aes(x=julDate, y=values, color=measure, fill=measure), size=2) +
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, alpha=type), size=3) +
scale_color_manual(values=c( "skyblue","seagreen","orange", "deeppink"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
scale_alpha_manual(values=c(.4,.6))+
scale_fill_manual(values=c("skyblue","seagreen","orange", "deeppink"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
graph1=ggplot() +
stat_smooth(data=allLines, aes(x=julDate, y=values, color=measure, fill=measure), size=2) +
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, alpha=type), size=3) +
scale_color_manual(values=c( "skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
scale_alpha_manual(values=c(.4,.6))+
scale_fill_manual(values=c("skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
equinoxDates=data.frame(julian=c(79,171,266), type=c("Spring Equinox","Summer Solstice","Fall Equinox"))
levels(equinoxDates$type)
equinoxDates$type <- factor(equinoxDates$type, levels="Spring Equinox", "Summer Solstice","Fall Equinox"))
equinoxDates$type <- factor(equinoxDates$type, levels="Spring Equinox", "Summer Solstice","Fall Equinox")
equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox", "Summer Solstice","Fall Equinox"))
equinoxDates$type
equinoxDates=data.frame(julian=c(79,171,266), type=c("Spring Equinox","Summer Solstice","Fall Equinox"))
equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox", "Summer Solstice","Fall Equinox"))
levels(equinoxDates$type)
equinoxDates$type
graph1=ggplot() +
stat_smooth(data=allLines, aes(x=julDate, y=values, color=measure, fill=measure), size=2) +
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, alpha=type), size=3) +
scale_color_manual(values=c( "skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
scale_alpha_manual(values=c(.4,.5,.6))+
scale_fill_manual(values=c("skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
equinoxDates=data.frame(julian=c(79,266), type=c("Spring Equinox","Fall Equinox"))
equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox","Fall Equinox"))
graph1=ggplot() +
stat_smooth(data=allLines, aes(x=julDate, y=values, color=measure, fill=measure), size=2) +
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, alpha=type), size=3) +
scale_color_manual(values=c( "skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
scale_alpha_manual(values=c(.4,.5,.6))+
scale_fill_manual(values=c("skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
graph1=ggplot() +
stat_smooth(data=allLines, aes(x=julDate, y=values, color=measure, fill=measure), size=2) +
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, alpha=type), size=3) +
scale_color_manual(values=c( "skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
scale_alpha_manual(values=c(.4,.6))+
scale_fill_manual(values=c("skyblue","orange", "deeppink","seagreen"),
breaks=c("Air Temp", "Water Temp", "Pool Depth", "Pool Diameter")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="All Vernal Pool Measurements", x ="Julian Date", y="Percent of Max Value",
alpha='')
graph1
View(graphingFrame)
?round
tempFrame=data.frame(airTemp=round(graphingFrame$airTemp, 2), diameter=graphingFrame$diameter)
allTemps=unique(tempFrame$airTemp)
View(tempFrame)
diamByTemp=overviewInfo(tempFrame, "airTemp", "diamter", allTemps)
diamByTemp=overviewInfo(tempFrame, "airTemp", "diameter", allTemps)
diamByTempFrame=data.frame(temp=allTemps, values=diamByTemp)
graph1=ggplot() +
stat_smooth(data=diamByTempFrame, aes(x=temp, y=values)) +
geom_point(data=diamByTempFrame, aes(x=temp, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
scale_color_manual(values=c("green", "red")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Water Temperature by Julian Date", x ="Julian Date", y="Water Temp/Max Water Temp",
color="")
#ggsave(graph1, filename = "waterTempOverall.png")
graph1
graph1=ggplot() +
stat_smooth(data=diamByTempFrame, aes(x=temp, y=values)) +
geom_point(data=diamByTempFrame, aes(x=temp, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 1)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
scale_color_manual(values=c("green", "red")) +
annotate("text", x = .5, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = .5, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = .5, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Water Temperature by Julian Date", x ="Julian Date", y="Water Temp/Max Water Temp",
color="")
#ggsave(graph1, filename = "waterTempOverall.png")
graph1
streams=read.csv("../streams.csv")
View(streams)
#Get year as an identifier
streams$Date=as.Date(streamsl$Date)
streams$Year=format(streams$Date, "%Y")
#give a unique identifier to each location
streams$teacherNum=as.numeric(as.factor(streams$Teacher))
streams$uniqLocationID=(streams$teacherNum*100 + streams$Location)
streams$Date=as.Date(streams$Date)
streams$Year=format(streams$Date, "%Y")
maxVals <- function(data, variable, group){
maxes=c()
for (i in 1:nrow(data)){
maxes=c(maxes,max(subset(data, data[group][[1]] == data[i,][group][[1]])[variable][[1]], na.rm=TRUE))
}
return(maxes)
}
streams$maxDepth=maxVals(streams, "Depth..cm.", "uniqLocationID")
streams$maxAirTemp=maxVals(streams, "Air.Temp..c.", "uniqLocationID")
streams$maxWaterTemp=maxVals(streams, "Water.Temp..c.", "uniqLocationID")
streams$pctDepth=streams$Depth..cm./streams$maxDepth
streams$pctAirTemp=streams$Air.Temp..c./streams$maxAirTemp
streams$pctWaterTemp=streams$Water.Temp..c./streams$maxWaterTemp
graphingFrame=data.frame(date=streams$Date, pool=streams$Pool,
depth=streams$pctDepth, airTemp=streams$pctAirTemp, waterTemp=streams$pctWaterTemp,
julian=streams$Julian, year=streams$Year)
graphingFrame=data.frame(date=streams$Date, location=streams$uniqLocationID,
depth=streams$pctDepth, airTemp=streams$pctAirTemp, waterTemp=streams$pctWaterTemp,
julian=streams$Julian, year=streams$Year)
attach(graphingFrame)
sorted=graphingFrame[order(julian),]
allDates=unique(sorted$julian)
allYears=as.character(unique(sorted$year))
numLocs=length(unique(sorted$location))
numObs=length(sorted$location)
numYears=length(unique(sorted$year))
equinoxDates=data.frame(julian=c(79,266), type=c("Spring Equinox","Fall Equinox"))
equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox","Fall Equinox"))
# equinoxDates=data.frame(julian=c(79,171,266), type=c("Spring Equinox","Summer Solstice","Fall Equinox"))
# equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox", "Summer Solstice","Fall Equinox"))
overviewInfo <- function(data, timeColumn, dataColumn, allDates){
allAverages=c()
for (time in allDates){
allVals=subset(data, data[timeColumn][[1]]==time)[dataColumn][[1]]
avg=mean(allVals, na.rm=TRUE)
allAverages=c(allAverages,avg)
}
return(allAverages)
}
depthAverages=overviewInfo(graphingFrame,"julian", "depth",allDates)
overallAvgDepth=data.frame(julDate=allDates, values=depthAverages)
graph1=ggplot() +
stat_smooth(data=overallAvgDepth, aes(x=julDate, y=values)) +
geom_point(data=overallAvgDepth, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
scale_color_manual(values=c("green", "red")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Depth by Julian Date", x ="Julian Date", y="Depth (cm)")
#ggsave(graph1, filename = "depthOverall.png")
graph1
graph1=ggplot() +
stat_smooth(data=overallAvgDepth, aes(x=julDate, y=values)) +
geom_point(data=overallAvgDepth, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
scale_color_manual(values=c("green", "red")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Locations: ", numLocs)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Depth by Julian Date", x ="Julian Date", y="Depth (cm)")
#ggsave(graph1, filename = "depthOverall.png")
graph1
graph1=ggplot() +
stat_smooth(data=overallAvgDepth, aes(x=julDate, y=values)) +
geom_point(data=overallAvgDepth, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Locations: ", numLocs)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Stream Depth by Julian Date", x ="Julian Date", y="Depth (cm)")
#ggsave(graph1, filename = "depthOverall.png")
graph1
graph1=ggplot() +
stat_smooth(data=overallAvgDepth, aes(x=julDate, y=values)) +
geom_point(data=overallAvgDepth, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Locations: ", numLocs)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Stream Depth by Julian Date", x ="Julian Date", y="Depth (percent of max)")
#ggsave(graph1, filename = "depthOverall.png")
graph1
graphingFrame=data.frame(date=streams$Date, location=streams$uniqLocationID,
depth=streams$pctDepth, airTemp=streams$pctAirTemp, waterTemp=streams$pctWaterTemp,
flow=streams$Flow.Rate, julian=streams$Julian, year=streams$Year)
attach(graphingFrame)
graph1=ggplot() +
stat_smooth(data=overallAvgFlow, aes(x=julDate, y=values)) +
geom_point(data=overallAvgFlow, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 5)) +
scale_x_continuous(limits=c(0, 360)) +
annotate("text", x = 180, y = 5, label = paste0("Number of Locations: ", numLocs)) +
annotate("text", x = 180, y = 4.9, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 4.8, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Stream Depth by Julian Date", x ="Julian Date", y="Depth (percent of max)")
#ggsave(graph1, filename = "streamDepthOverall.png")
graph1
flowAverages=overviewInfo(graphingFrame,"julian", "flow",allDates)
overallAvgFlow=data.frame(julDate=allDates, values=flowAverages)
graph1=ggplot() +
stat_smooth(data=overallAvgFlow, aes(x=julDate, y=values)) +
geom_point(data=overallAvgFlow, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 5)) +
scale_x_continuous(limits=c(0, 360)) +
annotate("text", x = 180, y = 5, label = paste0("Number of Locations: ", numLocs)) +
annotate("text", x = 180, y = 4.9, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 4.8, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Stream Depth by Julian Date", x ="Julian Date", y="Depth (percent of max)")
#ggsave(graph1, filename = "streamDepthOverall.png")
graph1
diameterYearlyAverages=overviewInfo(graphingFrame, "date", "diameter", unique(graphingFrame$date))
#read in the vernal pool data
vernalPool=read.csv("../vernal_pools.csv")
#Get year as an identifier
vernalPool$Date=as.Date(vernalPool$Date)
vernalPool$Year=format(vernalPool$Date, "%Y")
#give a unique identifier to each pool
vernalPool$teacherNum=as.numeric(as.factor(vernalPool$Teacher))
vernalPool$uniqPoolID=(vernalPool$teacherNum*100 + vernalPool$Pool)
#get max values of depth air temp, and water temp
maxVals <- function(data, variable, group){
maxes=c()
for (i in 1:nrow(data)){
maxes=c(maxes,max(subset(data, data[group][[1]] == data[i,][group][[1]])[variable][[1]], na.rm=TRUE))
}
return(maxes)
}
vernalPool$maxDepth=maxVals(vernalPool, "Depth..cm.", "uniqPoolID")
vernalPool$maxAirTemp=maxVals(vernalPool, "Air.Temp..c.", "uniqPoolID")
vernalPool$maxWaterTemp=maxVals(vernalPool, "Water.Temp..c.", "uniqPoolID")
#get percentages of all variables
vernalPool$pctDiam=vernalPool$Diameter..m./vernalPool$Max.Diameter..m.
vernalPool$pctDepth=vernalPool$Depth..cm./vernalPool$maxDepth
vernalPool$pctAirTemp=vernalPool$Air.Temp..c./vernalPool$maxAirTemp
vernalPool$pctWaterTemp=vernalPool$Water.Temp..c./vernalPool$maxWaterTemp
graphingFrame=data.frame(date=vernalPool$Date, pool=vernalPool$uniqPoolID,diameter=vernalPool$pctDiam,
depth=vernalPool$pctDepth, airTemp=vernalPool$pctAirTemp,
waterTemp=vernalPool$pctWaterTemp, julian=vernalPool$Julian, year=vernalPool$Year)
attach(graphingFrame)
sorted=graphingFrame[order(julian),]
allDates=unique(sorted$julian)
allYears=as.character(unique(sorted$year))
numPools=length(unique(sorted$pool))
numObs=length(sorted$pool)
numYears=length(unique(sorted$year))
equinoxDates=data.frame(julian=c(79,266), type=c("Spring Equinox","Fall Equinox"))
equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox","Fall Equinox"))
# equinoxDates=data.frame(julian=c(79,171,266), type=c("Spring Equinox","Summer Solstice","Fall Equinox"))
# equinoxDates$type <- factor(equinoxDates$type, levels=c("Spring Equinox", "Summer Solstice","Fall Equinox"))
overviewInfo <- function(data, timeColumn, dataColumn, allDates){
allAverages=c()
for (time in allDates){
allVals=subset(data, data[timeColumn][[1]]==time)[dataColumn][[1]]
avg=mean(allVals, na.rm=TRUE)
allAverages=c(allAverages,avg)
}
return(allAverages)
}
diameterAverages=overviewInfo(graphingFrame,"julian", "diameter",allDates)
overallAvgDiam=data.frame(julDate=allDates, values=diameterAverages)
diameterYearlyAverages=overviewInfo(graphingFrame, "date", "diameter", unique(graphingFrame$date))
#Smoothed Line
graph1=ggplot() +
stat_smooth(data=overallAvgDiam, aes(x=julDate, y=values)) +
geom_point(data=overallAvgDiam, aes(x=julDate, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
scale_x_continuous(limits=c(0, 360)) +
geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
scale_color_manual(values=c("green", "red")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
overallYearlyAvgDiam=data.frame(date=unique(graphingFrame$date), values=diameterYearlyAverages)
graph1=ggplot() +
stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
graph1=ggplot() +
stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95)
graph1
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15))
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = 180, y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = 180, y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = 180, y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
graph1
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15))
graph1
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = date("1/1/2006"), y = 1.15, label = paste0("Number of Pools: ", numPools))
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = Date("1/1/2006"), y = 1.15, label = paste0("Number of Pools: ", numPools))
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("1/1/2006"), y = 1.15, label = paste0("Number of Pools: ", numPools))
graph1
as.date(1/1/2006)
as.Date(1/1/2006)
as.Date("1/1/2006")
as.Date("Jan 1 2006")
as.Date("2006-01-01")
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("2006-01-01"), y = 1.15, label = paste0("Number of Pools: ", numPools))
graph1
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("2006-01-01"), y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = as.Date("2006-01-01"), y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = as.Date("2006-01-01"), y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
airTempYearlyAverages=overviewInfo(graphingFrame, "date", "airTemp", unique(graphingFrame$date))
overallYearlyAvgDiam=data.frame(date=unique(graphingFrame$date), values=airTempYearlyAverages)
overallYearlyAvgAirTemp=data.frame(date=unique(graphingFrame$date), values=airTempYearlyAverages)
graph1=ggplot() +
#stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgAirTemp, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("2006-01-01"), y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = as.Date("2006-01-01"), y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = as.Date("2006-01-01"), y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
graph1=ggplot() +
stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values)) +
geom_point(data=overallYearlyAvgAirTemp, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("2006-01-01"), y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = as.Date("2006-01-01"), y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = as.Date("2006-01-01"), y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
?stat_smooth
graph1=ggplot() +
stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values), span=.1) +
geom_point(data=overallYearlyAvgAirTemp, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("2006-01-01"), y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = as.Date("2006-01-01"), y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = as.Date("2006-01-01"), y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
diameterYearlyAverages=overviewInfo(graphingFrame, "date", "diameter", unique(graphingFrame$date))
overallYearlyAvgDiam=data.frame(date=unique(graphingFrame$date), values=diameterYearlyAverages)
#Smoothed Line
graph1=ggplot() +
stat_smooth(data=overallYearlyAvgDiam, aes(x=date, y=values), span=.1) +
geom_point(data=overallYearlyAvgDiam, aes(x=date, y=values), color="grey40", alpha=.95) +
guides(alpha=FALSE)+
scale_y_continuous(limits=c(0, 1.15)) +
#scale_x_continuous(limits=c(0, 360)) +
# geom_vline(data=equinoxDates, aes(xintercept=julian, color=type), size=3, alpha=.6) +
# scale_color_manual(values=c("green", "red")) +
annotate("text", x = as.Date("2006-01-01"), y = 1.15, label = paste0("Number of Pools: ", numPools)) +
annotate("text", x = as.Date("2006-01-01"), y = 1.1, label = paste0("Number of Observations: ",numObs))+
annotate("text", x = as.Date("2006-01-01"), y = 1.05, label = paste0("Number of Years: ",numYears))+
labs(title="Overall Average Pool Diameter by Julian Date", x ="Julian Date", y="Diameter/Max Diameter", color="")
#ggsave(graph1, filename = "diameterOverall.png")
graph1
